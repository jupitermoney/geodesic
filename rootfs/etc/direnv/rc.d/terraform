# Usage: use_terraform [...]
#
# Load environment variables for a `terraform` project.
# Any arguments given will be passed to the terraform project.
# This should be called before `use tfenv`
# 
function use_terraform() {

	# The environment mapping below is not strictly necessary. Setting the `TF_CLI_*` envs is recommended.
	# The `TF_CLI_*` envs are handled by <https://github.com/cloudposse/tfenv>
	# This is done to preserve backwards compatibility with older environments and should eventually be deprecated.
	#
	# Terraform backend for a given project using envs
	export TF_STATE_FILE=${TF_FILE:-terraform.tfstate}
	TF_BUCKET_PREFIX=${TF_BUCKET_PREFIX:-$(basename $(pwd))}

	# Disable color if not running in a TTY (e.g. CI/CD context)
	if [ ! -t 1 ]; then
		export TF_CLI_DEFAULT_NO_COLOR=true
	fi

	shopt -s nullglob
    TF_BACKEND=("-backend=true" "-backend-config=key=${TF_BUCKET_PREFIX}/${TF_FILE}")
    [ ! -z ${TF_FILES} ]            || (echo "Run $0 from a terraform project directory"; exit 1)
    [ -z "${TF_BUCKET}" ]           || TF_BACKEND+=("-backend-config=bucket=${TF_BUCKET}")
    [ -z "${TF_BUCKET_REGION}" ]    || TF_BACKEND+=("-backend-config=region=${TF_BUCKET_REGION}")
    [ -z "${TF_DYNAMODB_TABLE}" ]   || TF_BACKEND+=("-backend-config=dynamodb_table=${TF_DYNAMODB_TABLE}")
    [ -z "${AWS_PROFILE}" ]         || TF_BACKEND+=("-backend-config=profile=${AWS_PROFILE}")

    export TF_CLI_ARGS="${TF_BACKEND}"
}